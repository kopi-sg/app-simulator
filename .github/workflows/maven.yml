name: Build and Test

on:
  push:
    branches:
      - main
      - dev/*

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    steps:
      - name: init
        run: |
          echo "::error:: this is an error"
          echo ""::warning title=warning-title::this is warning message""

  build:
    name: Build
    runs-on: ubuntu-22.04
    outputs:
      var1: ${{steps.build.outputs.var1}}
    needs: setup
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: "corretto"
          cache: maven
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: setup-java-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: setup-java-${{ runner.os }}-maven

      - name: Build
        id: build
        run: |
          echo "var1=testing" >> $GITHUB_OUTPUT
          mvn -Dmaven.test.skip=true -Ddependency-check.skip=true install

      - name: Pass variable
        run: |
          echo "name=test" >> $GITHUB_ENV

      - name: Read variable
        run: |
          echo "$name"

  test:
    name: Test
    runs-on: ubuntu-22.04
    needs: build
    permissions: write-all
    steps:
      - name: Print
        run: |
          echo "build::: ${{needs.build.outputs.var1}}"
      - uses: actions/checkout@v4
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: setup-java-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: setup-java-${{ runner.os }}-maven

      - name: Test
        run: |
          mvn --batch-mode -Dmaven.test.failure.ignore=true test

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: maven-test
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  scan:
    name: Scan
    uses: ./.github/workflows/scan-maven.yml
    needs: [build, test]
    secrets: inherit
    with:
      os_version: "ubuntu-24.04"

  release:
    name: Release new version
    runs-on: ubuntu-22.04
    needs: [scan]
    steps:
      - uses: actions/checkout@v4
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: setup-java-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: setup-java-${{ runner.os }}-maven

      - name: increment version
        run: |
          ### 1. Get the sha of the file
          sha_value=$(curl -s -H "Authorization: token ${{ github.token }}" https://api.github.com/repos/kopi-sg/app-simulator/contents/pom.xml | jq -r '.sha')
          echo "$sha_value"

          ### 2. Bump up the version
          # Get the current version from the pom.xml
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $current_version"

          # Parse the current version and increment the patch number
          IFS='.' read -r -a version_parts <<< "$current_version"
          major=${version_parts[0]}
          minor=${version_parts[1]}
          patch=${version_parts[2]}
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"

          echo "New version: $new_version"

          ### Set the new version
          mvn org.codehaus.mojo:versions-maven-plugin:2.16.2:set -DnewVersion=$new_version

          # 3. Commit the change
          file_content=$(base64 < "pom.xml" | tr -d '\n')
          # TODO: check curl result
          curl -X PUT -H "Authorization: token ${{github.token}}"  -H "Content-Type: application/json" "https://api.github.com/repos/kopi-sg/app-simulator/contents/pom.xml" -d '{"message":"bt github-bump [ci skip]","sha":"'"$sha_value"'","committer":{"name":"${{github.actor}}","email":"'${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com'"},"content":"'"$file_content"'"}' -v --trace-ascii -

  publish_job:
    name: Publish Job
    runs-on: ubuntu-22.04
    needs: [scan]

    steps:
      - uses: actions/checkout@v4

      - run: mvn -B package --file pom.xml -DskipTests
      - run: mkdir staging && cp target/*.jar staging

      - name: upload build
        uses: actions/upload-artifact@v1
        with:
          name: Package
          path: staging

  # https://github.com/docker/build-push-action
  dockerize:
    name: Dockerize
    runs-on: ubuntu-22.04
    needs: [scan]

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set env
        run: echo "DATE=$(date +%s)" >> $GITHUB_ENV

      - name: Login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to dockerhubb
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: weihan1394/simulator:${{ env.DATE }}, weihan1394/simulator:latest

  promote_dev:
    runs-on: "ubuntu-22.04"
    if: startsWith(github.ref, 'refs/heads/dev/')
    environment: "dev"
    needs: [publish_job, dockerize]
    steps:
      - name: deploy
        run: |
          echo "deploying dev..."

  promote_qa:
    runs-on: "ubuntu-22.04"
    if: github.ref == 'refs/heads/main'
    environment: "qa"
    needs: [publish_job, dockerize]
    steps:
      - name: deploy
        run: |
          echo "deploying qa..."

  promote_prd:
    runs-on: "ubuntu-22.04"
    if: github.ref == 'refs/heads/main'
    environment: "prd"
    needs: promote_qa
    steps:
      - name: deploy
        run: |
          echo "deploying prd..."
